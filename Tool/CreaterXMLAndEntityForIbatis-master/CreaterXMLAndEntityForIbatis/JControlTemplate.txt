package com.prj.goldapple.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.prj.goldapple.bean.<%tableName%>;
import com.prj.goldapple.service.I<%actionName%>Service;

@Controller
@RequestMapping("/<%actionVarName%>/")
public class <%actionName%>Controller {

	private I<%actionName%>Service <%actionVarName%>Service;

	public I<%actionName%>Service get<%actionName%>Service() {
		return <%actionVarName%>Service;
	}

	@Autowired
	public void set<%actionName%>Service(I<%actionName%>Service <%actionVarName%>Service) {
		this.<%actionVarName%>Service = <%actionVarName%>Service;
	}

	@ResponseBody
	@RequestMapping("getJSON")
	public Map<String, Object> getJSON(String <%actionVarName%>Id){

		return new HashMap<String, Object>();
	}
	
	@ResponseBody
	@RequestMapping("create")
	public Map<String, String> create(<%tableName%> <%tableVarName%>) {
		Map<String, String> map = new HashMap<String, String>();
		try {
			<%tableVarName%>.set<%tableName%>010(UUID.randomUUID().toString());
			<%actionVarName%>Service.create(<%tableVarName%>);
		} catch (Exception e) {
			map.put("result", "fail");
			return map;
		}
		map.put("result", "success");
		return map;
	}

	@ResponseBody
	@RequestMapping("delete")
	public Map<String, String> delete(String userId) {
		Map<String, String> map = new HashMap<String, String>();
		try {
			<%actionVarName%>Service.delete(userId);
		} catch (Exception e) {
			map.put("result", "fail");
			return map;
		}
		map.put("result", "success");
		return map;
	}

	@ResponseBody
	@RequestMapping("update")
	public Map<String, String> update(<%tableName%> <%tableVarName%>) {
		Map<String, String> map = new HashMap<String, String>();
		try {
			<%actionVarName%>Service.update(<%tableVarName%>);
		} catch (Exception e) {
			map.put("result", "fail");
			return map;
		}
		map.put("result", "success");
		return map;
	}

	@ResponseBody
	@RequestMapping("retrive")
	public <%tableName%> retrive(String userId) {
		<%tableName%> <%tableVarName%> = <%actionVarName%>Service.retrieve(userId);
		return <%tableVarName%>;
	}

	@ResponseBody
	@RequestMapping("queryForList")
	public List<<%tableName%>> queryForList() {
		List<<%tableName%>> lst = <%actionVarName%>Service.queryForList(null);
		return lst;
	}
}
